PROGRAM         -> STATEMENT | FUNCLIST | &
FUNCLIST        -> FUNCDEF FUNCLIST | FUNCDEF
FUNCDEF         -> DEF ID ( PARAMLIST ) { STATELIST }
PARAMLIST       -> & | TYPE ID , PARAMLIST | TYPE ID
TYPE            -> INT | FLOAT | STRING
STATEMENT       -> VARDECL ; | ATRIBSTAT ; | PRINTSTAT ; | READSTAT ; | RETURNSTAT ; | IFSTAT ; | FORSTAT | { STATELIST } | BREAK ; | FUNCCALL ; | ;
VARDECL         -> TYPE ID INT_INDEX
INT_INDEX       -> [ INT_CONSTANT ] INT_INDEX | &
ATRIBSTAT       -> LVALUE = ATRIBSTAT'
ATRIBSTAT'      -> EXPRESSION | ALLOCEXPRESSION | FUNCCALL
FUNCCALL        -> ID ( PARAMLISTCALL )
PARAMLISTCALL   -> ID , PARAMLISTCALL | ID | FACTOR | &
PRINTSTAT       -> PRINT EXPRESSION
READSTAT        -> READ LVALUE
RETURNSTAT      -> RETURN EXPRESSION | RETURN
IFSTAT          -> IF ( EXPRESSION ) STATEMENT IFSTAT'
IFSTAT'         -> ENDIF | ELSE STATEMENT ENDIF
FORSTAT         -> FOR ( ATRIBSTAT ; EXPRESSION ; ATRIBSTAT ) STATEMENT
STATELIST       -> STATEMENT STATELIST'
STATELIST'      -> & | STATELIST
ALLOCEXPRESSION -> NEW TYPE ALLOC_SIZE
ALLOC_SIZE      -> [ NUMEXPRESSION ] ALLOC_SIZE'
ALLOC_SIZE'     -> ALLOC_SIZE | &
EXPRESSION      -> NUMEXPRESSION EXPRESSION'
EXPRESSION'     -> & | RELOP NUMEXPRESSION
RELOP           -> < | > | LESS_EQUAL_THAN | GREATER_EQUAL_THAN | EQUAL | DIFFERENT
NUMEXPRESSION   -> TERM NUMEXPRESSION'
NUMEXPRESSION'  -> SUM TERM NUMEXPRESSION' | &
SUM             -> + | -
TERM            -> UNARYEXPR TERM'
TERM'           -> & | MULTI UNARYEXPR TERM'
MULTI           -> * | / | %
UNARYEXPR       -> SUM FACTOR | FACTOR
FACTOR          -> INT_CONSTANT | FLOAT_CONSTANT | STRING_CONSTANT | NULL | LVALUE | ( NUMEXPRESSION ) | FUNCCALL
LVALUE          -> ID NUM_INDEX
NUM_INDEX       -> [ NUMEXPRESSION ] NUM_INDEX | &